/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Clases;

import Conexiones.Conexion;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;

/**
 *
 * @author HP
 */
public class modificarInventario extends javax.swing.JInternalFrame {

    int contador = 0;
    int contador1 = 0;
    int cantidad , stock;
    public modificarInventario() {
        initComponents();
        /*
        primero limpia los comobox para despues agregar todos los productos existentes en la base de datos
        como en el form de agregar inventario
        */
        this.CBproagregar.removeAllItems();
        this.CBproagregar.addItem("SELECCIONAR PRODUCTO");
        try {
             ResultSet rs = null;
            Connection con3 = null;
            Conexion conect3 = new Conexion();
            con3 = conect3.getConnection();
            Statement Sent = con3.createStatement();
            rs = Sent.executeQuery("select * from inventario");
            while(rs.next()){
                this.CBproagregar.addItem(rs.getString("nombre"));
            }
            contador1++;
        } catch (SQLException e) {
        }
         this.CBproquitar.removeAllItems();
        this.CBproquitar.addItem("SELECCIONAR PRODUCTO");
        try {
             ResultSet rs = null;
            Connection con3 = null;
            Conexion conect3 = new Conexion();
            con3 = conect3.getConnection();
            Statement Sent = con3.createStatement();
            rs = Sent.executeQuery("select * from inventario");
            while(rs.next()){
                this.CBproquitar.addItem(rs.getString("nombre"));
            }
            contador++;
        } catch (SQLException e) {
        }
        desabilitar();
    }
    
    public void desabilitar(){//bloquea los textfali que se van a llenar dependiento de que se seleccione en el combobox
    txtidagregar.setEnabled(false);
    txtidquitar.setEnabled(false);
    txtstockagregar.setEnabled(false);
    txtstockquitar.setEnabled(false);
    txtnombreagregar.setEnabled(false);
    txtnombrequitar.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        CBproagregar = new javax.swing.JComboBox<>();
        txtidagregar = new javax.swing.JTextField();
        txtnombreagregar = new javax.swing.JTextField();
        txtstockagregar = new javax.swing.JTextField();
        txtcantidadagregar = new javax.swing.JTextField();
        BTNagregar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        CBproquitar = new javax.swing.JComboBox<>();
        txtidquitar = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtnombrequitar = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtstockquitar = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtcantidadquitar = new javax.swing.JTextField();
        BTNagregar1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("AUMENTAR STOCK"));
        jPanel1.setToolTipText("");

        jLabel1.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel1.setText("ID PRODUCTO:");

        jLabel2.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel2.setText("NOMBRE:");

        jLabel3.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel3.setText("STOCK:");

        jLabel4.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel4.setText("CANTIDAD A AGRAGAR:");

        CBproagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBproagregarActionPerformed(evt);
            }
        });

        txtcantidadagregar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadagregarKeyTyped(evt);
            }
        });

        BTNagregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/nuevo.png"))); // NOI18N
        BTNagregar.setText("AGREGAR");
        BTNagregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CBproagregar, 0, 357, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtidagregar, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)))
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtcantidadagregar)
                            .addComponent(txtstockagregar)
                            .addComponent(txtnombreagregar))))
                .addGap(25, 25, 25))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(BTNagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(CBproagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtnombreagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtstockagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtcantidadagregar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(BTNagregar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("DISMINUIR STOCK"));

        jLabel5.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel5.setText("ID PRODUCTO:");

        CBproquitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBproquitarActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel6.setText("NOMBRE:");

        jLabel7.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel7.setText("STOCK:");

        jLabel8.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel8.setText("STOCK:");

        jLabel9.setFont(new java.awt.Font("Georgia", 1, 12)); // NOI18N
        jLabel9.setText("CANTIDAD A QUITAR:");

        txtcantidadquitar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtcantidadquitarKeyTyped(evt);
            }
        });

        BTNagregar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Iconos/dvavd.png"))); // NOI18N
        BTNagregar1.setText("QUITAR");
        BTNagregar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BTNagregar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel6)
                    .addComponent(jLabel5))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(CBproquitar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtidquitar)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtstockquitar)
                            .addComponent(txtnombrequitar))
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(34, 34, 34)
                .addComponent(txtcantidadquitar)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTNagregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(408, 408, 408)
                    .addComponent(jLabel7)
                    .addContainerGap(433, Short.MAX_VALUE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(CBproquitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtidquitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtnombrequitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(txtstockquitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtcantidadquitar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BTNagregar1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(101, 101, 101)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(115, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtcantidadagregarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadagregarKeyTyped
         // solo permite numero en el textfile  para evitar errores de tipo
        char c = evt.getKeyChar();
        if(c<'0'||c>'9') evt.consume();
                        
    }//GEN-LAST:event_txtcantidadagregarKeyTyped

    private void txtcantidadquitarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtcantidadquitarKeyTyped
        // solo permite numero en el textfile  para evitar errores de tipo
        char c = evt.getKeyChar();
        if(c<'0'||c>'9') evt.consume();
                                      
    }//GEN-LAST:event_txtcantidadquitarKeyTyped

    private void CBproagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBproagregarActionPerformed
         CBproagregar.transferFocus();
         try {
            if(this.contador>0){//si hay elementos entra en el if
                /* 
                realiza la consulta en la base de datos buscando el producto que tenga la misma id que se seleccione 
                y se pone su informacion en los textfiles
                */
                ResultSet rs = null;
                Connection con2 = null;
                Conexion conect2 = new Conexion();
                con2 = conect2.getConnection();
                Statement Sent = con2.createStatement();
                ResultSet rs1 = Sent.executeQuery("select * from inventario where id_inventario = '" + this.CBproagregar.getSelectedIndex() + "'");
                rs1.next();
                this.txtidagregar.setText(String.valueOf(rs1.getInt("id_inventario")));
                this.txtnombreagregar.setText(String.valueOf(rs1.getString("nombre")));
                this.txtstockagregar.setText(String.valueOf(rs1.getInt("cantidad")));
                txtstockagregar.transferFocus();
            }
        } catch (SQLException e) {
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_CBproagregarActionPerformed

    private void CBproquitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBproquitarActionPerformed
      CBproquitar.transferFocus();
         try {
             /* 
                realiza la consulta en la base de datos buscando el producto que tenga la misma id que se seleccione 
                y se pone su informacion en los textfiles
                */
            if(this.contador>0){
                ResultSet rs = null;
                Connection con2 = null;
                Conexion conect2 = new Conexion();
                con2 = conect2.getConnection();
                Statement Sent = con2.createStatement();
                ResultSet rs1 = Sent.executeQuery("select * from inventario where id_inventario = '" + this.CBproquitar.getSelectedIndex() + "'");
                rs1.next();
                this.txtidquitar.setText(String.valueOf(rs1.getInt("id_inventario")));
                this.txtnombrequitar.setText(String.valueOf(rs1.getString("nombre")));
                this.txtstockquitar.setText(String.valueOf(rs1.getInt("cantidad")));
                txtstockquitar.transferFocus();
            }
        } catch (SQLException e) {
             JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_CBproquitarActionPerformed

    private void BTNagregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregarActionPerformed
      //primero valida si los textfiles tiene texto
        if ( this.txtidagregar.getText().isEmpty()) {
             JOptionPane.showMessageDialog(this, "FALTA ELEGIR UN PRODUCTO", "Advertencia", JOptionPane.WARNING_MESSAGE);
            CBproagregar.requestFocus();
        }else if(txtcantidadagregar.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA AGREGAR CANTIDAD", "Advertencia", JOptionPane.WARNING_MESSAGE);
           txtcantidadagregar.requestFocus();
        }else{
            /*
            ya validados realiza la consulta para actualizar la cantidad del producto
            */
             try
            {
                Connection con1 = null;
                PreparedStatement ps = null;
                Conexion conect1 = new Conexion();
                con1 = conect1.getConnection();
                //la consulta dice que actualice la yabla inventario poniendo la cantidad a la cantidad que esta mas la cantidad que ponga el usuario donde la id sea igual a la seleccionada en el combobox
                String Update = "UPDATE inventario SET cantidad = cantidad + " + txtcantidadagregar.getText() + " WHERE id_inventario = '" + txtidagregar.getText() + "'";
                ps = con1.prepareStatement(Update);
                ps.executeUpdate();//realiza la actualizacion
                JOptionPane.showMessageDialog(this, "EL MATERIAL FUE AGREGADO AL INVENTARIO CORRECTAMENTE");
                dispose();//cierra la ventana para que se pueden actualizar las cantidades en el form
            } catch (SQLException ex)
            {
                JOptionPane.showMessageDialog(this, "EL MATERIAL SOLICITADO NO A SIDO AGREGADO CORRECTAMENTE", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("ERROR AL INSERTAR LOS DATOS : " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_BTNagregarActionPerformed

    private void BTNagregar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BTNagregar1ActionPerformed
        if ( this.txtidquitar.getText().isEmpty()) {
             JOptionPane.showMessageDialog(this, "FALTA ELEGIR UN PRODUCTO", "Advertencia", JOptionPane.WARNING_MESSAGE);
            CBproquitar.requestFocus();
        }else if(txtcantidadquitar.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "FALTA AGREGAR CANTIDAD", "Advertencia", JOptionPane.WARNING_MESSAGE);
           txtcantidadquitar.requestFocus();
        }else{
            //revisa si lo que se quiere quitar es menor que lo existente si no muestra un mensaje con el error
             stock=Integer.parseInt(txtstockquitar.getText());
            cantidad=Integer.parseInt(txtcantidadquitar.getText());
            if(cantidad>stock)
            {
                JOptionPane.showMessageDialog(this, "NO HAY SUFICIENTE MATERIAL", "Advertencia", JOptionPane.WARNING_MESSAGE);
                txtcantidadquitar.setText("");
                txtcantidadquitar.requestFocus();
            }else{
            try
            {
                Connection con1 = null;
                PreparedStatement ps = null;
                Conexion conect1 = new Conexion();
                con1 = conect1.getConnection();
                 //la consulta dice que actualice la yabla inventario poniendo la cantidad a la cantidad que esta menos la cantidad que ponga el usuario donde la id sea igual a la seleccionada en el combobox
                String Update = "UPDATE inventario SET cantidad = cantidad - " + txtcantidadquitar.getText() + " WHERE id_inventario = '" + txtidquitar.getText() + "'";
                ps = con1.prepareStatement(Update);
                ps.executeUpdate();
                JOptionPane.showMessageDialog(this, "EL MATERIAL FUE REMOVIDO DEL INVENTARIO CORRECTAMENTE");
                dispose();
            } catch (SQLException ex)
            {
                JOptionPane.showMessageDialog(this, "EL MATERIAL SOLICITADO NO A SIDO REMOVIDO CORRECTAMENTE", "Error", JOptionPane.ERROR_MESSAGE);
                System.out.println("ERROR AL INSERTAR LOS DATOS : " + ex.getMessage());
            }
        } 
            }
            
    }//GEN-LAST:event_BTNagregar1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BTNagregar;
    private javax.swing.JButton BTNagregar1;
    private javax.swing.JComboBox<String> CBproagregar;
    private javax.swing.JComboBox<String> CBproquitar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtcantidadagregar;
    private javax.swing.JTextField txtcantidadquitar;
    private javax.swing.JTextField txtidagregar;
    private javax.swing.JTextField txtidquitar;
    private javax.swing.JTextField txtnombreagregar;
    private javax.swing.JTextField txtnombrequitar;
    private javax.swing.JTextField txtstockagregar;
    private javax.swing.JTextField txtstockquitar;
    // End of variables declaration//GEN-END:variables
}
